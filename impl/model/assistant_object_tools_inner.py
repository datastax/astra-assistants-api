# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401
from openapi_server.models.assistant_tools_code import AssistantToolsCode
from openapi_server.models.assistant_tools_function import AssistantToolsFunction
from openapi_server.models.assistant_tools_retrieval import AssistantToolsRetrieval
from openapi_server.models.function_object import FunctionObject


class AssistantObjectToolsInner(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    AssistantObjectToolsInner - a model defined in OpenAPI

#        type: The type of this AssistantObjectToolsInner.
#        function: The function of this AssistantObjectToolsInner.
    """

    type: Optional[str] = Field(alias="type")
    function: Optional[FunctionObject] = Field(default=None, alias="function")

    def to_dict(self) -> Dict[str, Any]:
        _dict = self.model_dump(
            by_alias=True,
            exclude={
            },
            exclude_none=True,
        )
        return _dict

AssistantObjectToolsInner.update_forward_refs()